// Initial Solution
class Solution {
    public int majorityElement(int[] nums) {
        HashMap<Integer, Integer> map = new HashMap<>();
        for (int num: nums) {
            if (map.containsKey(num)) {
                map.put(num, map.get(num) + 1);
                if (map.get(num) > nums.length / 2)
                    return num;
            }
            else {
                map.put(num, 1);
            }
        }
        return nums[0];
    }
}

// Optimized for space (Boyerâ€“Moore majority vote algorithm)
class Solution {
    public int majorityElement(int[] nums) {
        int count = 0, res = -1;
        for (int num: nums) {
            if (count == 0)
                res = num;
            count += num == res ? 1 : -1;
        }
        return res;
    }
}